# Default values for squid.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  # The ubuntu/squid image does not support HTTPS bumping.
  # If squid.https.enabled is true then use the image ckt114/squid or build your own.
  repository: ubuntu/squid
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

squid:

  # Allow known safe ports
  enableSafePorts: true

  # Additional settings to add to /etc/squid/conf.d/
  extraConfigs: []
  # - name: allow-internet
  #   settings: |
  #     acl internet src 0.0.0.0/0
  #     http_access allow internet

  # Enable basic authentication
  authentication:
    enabled: false
    users:
    - name: jdoe
      password: abc123

  https:
    enabled: false
    secret:
      # The path where the merged certificate and key is to be found
      path: /etc/squid/ssl/cert-key.pem

      # The secret that contains the merged certificate and key
      # Empty string will not mount the secret into above `path`
      # For use with initContainer that combines certificate and key into single file.
      name: tls-secret-name

      # They YAML key that holds merged certificate and key
      key: tls-secret-key

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3128

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Init containers to add to deployment.
initContainers: []

# Environment variables to add to Deployment definition.
env: []
# - name: key
#   value: value

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
